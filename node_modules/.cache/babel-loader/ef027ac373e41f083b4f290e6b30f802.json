{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SpeechKeyword = void 0;\n\nvar SpeechKeyword = function () {\n  function SpeechKeyword(json) {\n    this.privSpeechKeyword = JSON.parse(json);\n  }\n\n  SpeechKeyword.fromJSON = function (json) {\n    return new SpeechKeyword(json);\n  };\n\n  Object.defineProperty(SpeechKeyword.prototype, \"Status\", {\n    get: function () {\n      return this.privSpeechKeyword.Status;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SpeechKeyword.prototype, \"Text\", {\n    get: function () {\n      return this.privSpeechKeyword.Text;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SpeechKeyword.prototype, \"Offset\", {\n    get: function () {\n      return this.privSpeechKeyword.Offset;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SpeechKeyword.prototype, \"Duration\", {\n    get: function () {\n      return this.privSpeechKeyword.Duration;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return SpeechKeyword;\n}();\n\nexports.SpeechKeyword = SpeechKeyword;","map":{"version":3,"sources":["src/common.speech/ServiceMessages/SpeechKeyword.ts"],"names":[],"mappings":"cAAA;AACA;;;;;;;AAUA,IAAA,aAAA,GAAA,YAAA;AAGI,WAAA,aAAA,CAAoB,IAApB,EAAgC;AAC5B,SAAK,iBAAL,GAAyB,IAAI,CAAC,KAAL,CAAW,IAAX,CAAzB;AACH;;AAEa,EAAA,aAAA,CAAA,QAAA,GAAd,UAAuB,IAAvB,EAAmC;AAC/B,WAAO,IAAI,aAAJ,CAAkB,IAAlB,CAAP;AACH,GAFa;;AAId,EAAA,MAAA,CAAA,cAAA,CAAW,aAAA,CAAA,SAAX,EAAW,QAAX,EAAiB;SAAjB,YAAA;AACI,aAAO,KAAK,iBAAL,CAAuB,MAA9B;AACH,KAFgB;qBAAA;;AAAA,GAAjB;AAIA,EAAA,MAAA,CAAA,cAAA,CAAW,aAAA,CAAA,SAAX,EAAW,MAAX,EAAe;SAAf,YAAA;AACI,aAAO,KAAK,iBAAL,CAAuB,IAA9B;AACH,KAFc;qBAAA;;AAAA,GAAf;AAIA,EAAA,MAAA,CAAA,cAAA,CAAW,aAAA,CAAA,SAAX,EAAW,QAAX,EAAiB;SAAjB,YAAA;AACI,aAAO,KAAK,iBAAL,CAAuB,MAA9B;AACH,KAFgB;qBAAA;;AAAA,GAAjB;AAIA,EAAA,MAAA,CAAA,cAAA,CAAW,aAAA,CAAA,SAAX,EAAW,UAAX,EAAmB;SAAnB,YAAA;AACI,aAAO,KAAK,iBAAL,CAAuB,QAA9B;AACH,KAFkB;qBAAA;;AAAA,GAAnB;AAGJ,SAAA,aAAA;AAAC,CA1BD,EAAA;;AAAa,OAAA,CAAA,aAAA,GAAA,aAAA","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// speech.keyword\r\nexport interface ISpeechKeyword {\r\n    Status: string;\r\n    Text: string;\r\n    Offset: number;\r\n    Duration: number;\r\n}\r\n\r\nexport class SpeechKeyword implements ISpeechKeyword {\r\n    private privSpeechKeyword: ISpeechKeyword;\r\n\r\n    private constructor(json: string) {\r\n        this.privSpeechKeyword = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): SpeechKeyword {\r\n        return new SpeechKeyword(json);\r\n    }\r\n\r\n    public get Status(): string {\r\n        return this.privSpeechKeyword.Status;\r\n    }\r\n\r\n    public get Text(): string {\r\n        return this.privSpeechKeyword.Text;\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privSpeechKeyword.Offset;\r\n    }\r\n\r\n    public get Duration(): number {\r\n        return this.privSpeechKeyword.Duration;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}