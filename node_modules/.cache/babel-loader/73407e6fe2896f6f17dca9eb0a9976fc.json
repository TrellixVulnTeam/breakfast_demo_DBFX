{"ast":null,"code":"/*\nEXAMPLE: SearchL2 + ProvL1 + AskL1\n\nT> What did you have for breakfast this morning?\nS> I had toast with butter and…\nCODE-SWITCHING BUTTON (L2 → L1)\nS> Mermelada (<trans: jam>)\nS> ¿Cómo se dice? (<trans: how do you say it?)\nCODE-SWITCHING BUTTON (L1 → L2)??\nT> Jam\nS> Jam\nT> Mhm\n\n\nT> What did you have for breakfast this morning?\nS> I had toast with butter and…\nT> Sorry, I didn't get that. What did you have for breakfast this morning?\n*/\nimport { send, assign } from \"xstate\";\n\nfunction say(text) {\n  return send(_context => ({\n    type: \"SPEAK\",\n    value: text\n  }));\n}\n\nconst breakfastGrammar = {\n  \"I had toasts.\": \"Toast\",\n  \"I had toasts with butter\": \"Toast\"\n};\nexport const dmMachine = {\n  initial: 'idle',\n  states: {\n    idle: {\n      on: {\n        CLICK: 'init'\n      }\n    },\n    init: {\n      on: {\n        TTS_READY: 'welcome',\n        CLICK: 'welcome'\n      }\n    },\n    welcome: {\n      initial: 'prompt',\n      on: {\n        RECOGNISED: [{\n          target: 'missingWord',\n          cond: context => context.recResult[0].utterance in breakfastGrammar,\n          actions: assign({\n            breakfast: context => breakfastGrammar[context.recResult[0].utterance]\n          })\n        }, {\n          target: 'categoryNotKnown'\n        }]\n      },\n      states: {\n        prompt: {\n          entry: say(\"What did you have for breakfast this morning?\"),\n          on: {\n            ENDSPEECH: 'ask'\n          }\n        },\n        ask: {\n          entry: send('LISTEN')\n        },\n        nomatch: {\n          entry: say(\"Sorry, I didn't get that.\"),\n          on: {\n            ENDSPEECH: 'prompt'\n          }\n        }\n      }\n    },\n    missingWord: {\n      initial: 'prompt',\n      states: {\n        prompt: {\n          entry: say(\"What did you have for breakfast this morning?\")\n        }\n      }\n    },\n    categoryNotKnown: {}\n  }\n};","map":{"version":3,"sources":["/home/andrea/Desktop/breakfast/src/dmBreakfast.ts"],"names":["send","assign","say","text","_context","type","value","breakfastGrammar","dmMachine","initial","states","idle","on","CLICK","init","TTS_READY","welcome","RECOGNISED","target","cond","context","recResult","utterance","actions","breakfast","prompt","entry","ENDSPEECH","ask","nomatch","missingWord","categoryNotKnown"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAAwBA,IAAxB,EAA8BC,MAA9B,QAAoD,QAApD;;AAEA,SAASC,GAAT,CAAaC,IAAb,EAAyD;AACrD,SAAOH,IAAI,CAAEI,QAAD,KAA2B;AAAEC,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,KAAK,EAAEH;AAAxB,GAA3B,CAAD,CAAX;AACH;;AAED,MAAMI,gBAA6C,GAAG;AAClD,mBAAkB,OADgC;AAElD,8BAA6B;AAFqB,CAAtD;AAKA,OAAO,MAAMC,SAAmD,GAAI;AAChEC,EAAAA,OAAO,EAAE,MADuD;AAEhEC,EAAAA,MAAM,EAAE;AACJC,IAAAA,IAAI,EAAE;AACFC,MAAAA,EAAE,EAAE;AACAC,QAAAA,KAAK,EAAE;AADP;AADF,KADF;AAMJC,IAAAA,IAAI,EAAE;AACFF,MAAAA,EAAE,EAAE;AACAG,QAAAA,SAAS,EAAE,SADX;AAEAF,QAAAA,KAAK,EAAE;AAFP;AADF,KANF;AAYJG,IAAAA,OAAO,EAAE;AACLP,MAAAA,OAAO,EAAE,QADJ;AAELG,MAAAA,EAAE,EAAE;AACAK,QAAAA,UAAU,EAAE,CACR;AACIC,UAAAA,MAAM,EAAE,aADZ;AAEIC,UAAAA,IAAI,EAAGC,OAAD,IAAaA,OAAO,CAACC,SAAR,CAAkB,CAAlB,EAAqBC,SAArB,IAAkCf,gBAFzD;AAGIgB,UAAAA,OAAO,EAAEtB,MAAM,CAAC;AAAEuB,YAAAA,SAAS,EAAGJ,OAAD,IAAab,gBAAgB,CAACa,OAAO,CAACC,SAAR,CAAkB,CAAlB,EAAqBC,SAAtB;AAA1C,WAAD;AAHnB,SADQ,EAMR;AACGJ,UAAAA,MAAM,EAAE;AADX,SANQ;AADZ,OAFC;AAcLR,MAAAA,MAAM,EAAE;AACJe,QAAAA,MAAM,EAAE;AACJC,UAAAA,KAAK,EAAExB,GAAG,CAAC,+CAAD,CADN;AAEJU,UAAAA,EAAE,EAAE;AAAEe,YAAAA,SAAS,EAAE;AAAb;AAFA,SADJ;AAKJC,QAAAA,GAAG,EAAE;AACDF,UAAAA,KAAK,EAAE1B,IAAI,CAAC,QAAD;AADV,SALD;AAQJ6B,QAAAA,OAAO,EAAE;AACLH,UAAAA,KAAK,EAAExB,GAAG,CAAC,2BAAD,CADL;AAELU,UAAAA,EAAE,EAAE;AAAEe,YAAAA,SAAS,EAAE;AAAb;AAFC;AARL;AAdH,KAZL;AAwCJG,IAAAA,WAAW,EAAE;AACTrB,MAAAA,OAAO,EAAE,QADA;AAETC,MAAAA,MAAM,EAAE;AACJe,QAAAA,MAAM,EAAE;AACJC,UAAAA,KAAK,EAAExB,GAAG,CAAC,+CAAD;AADN;AADJ;AAFC,KAxCT;AAiDJ6B,IAAAA,gBAAgB,EAAE;AAjDd;AAFwD,CAA7D","sourcesContent":["/*\nEXAMPLE: SearchL2 + ProvL1 + AskL1\n\nT> What did you have for breakfast this morning?\nS> I had toast with butter and…\nCODE-SWITCHING BUTTON (L2 → L1)\nS> Mermelada (<trans: jam>)\nS> ¿Cómo se dice? (<trans: how do you say it?)\nCODE-SWITCHING BUTTON (L1 → L2)??\nT> Jam\nS> Jam\nT> Mhm\n\n\nT> What did you have for breakfast this morning?\nS> I had toast with butter and…\nT> Sorry, I didn't get that. What did you have for breakfast this morning?\n*/\n\n\nimport { MachineConfig, send, assign, Action } from \"xstate\";\n\nfunction say(text: string): Action<SDSContext, SDSEvent> {\n    return send((_context: SDSContext) => ({ type: \"SPEAK\", value: text }))\n}\n\nconst breakfastGrammar: { [index: string]: string } = {\n    \"I had toasts.\" : \"Toast\",\n    \"I had toasts with butter\" : \"Toast\"\n}\n\nexport const dmMachine: MachineConfig<SDSContext, any, SDSEvent> = ({\n    initial: 'idle',\n    states: {\n        idle: {\n            on: {\n                CLICK: 'init'\n            }\n        },\n        init: {\n            on: {\n                TTS_READY: 'welcome',\n                CLICK: 'welcome'\n            }\n        },\n        welcome: {\n            initial: 'prompt',\n            on: {\n                RECOGNISED: [\n                    {\n                        target: 'missingWord',\n                        cond: (context) => context.recResult[0].utterance in breakfastGrammar,\n                        actions: assign({ breakfast: (context) => breakfastGrammar[context.recResult[0].utterance] })\n                    },\n                    {\n                       target: 'categoryNotKnown'\n                    }\n                ]\n            },\n            states: {\n                prompt: {\n                    entry: say(\"What did you have for breakfast this morning?\"),\n                    on: { ENDSPEECH: 'ask' }\n                },\n                ask: {\n                    entry: send('LISTEN')\n                },\n                nomatch: {\n                    entry: say(\"Sorry, I didn't get that.\"),\n                    on: { ENDSPEECH: 'prompt'}\n                }\n            }\n        },\n        missingWord: {\n            initial: 'prompt',\n            states: {\n                prompt: {\n                    entry: say(\"What did you have for breakfast this morning?\"),\n                },\n                \n            }\n        },\n        categoryNotKnown: {}\n    }\n})"]},"metadata":{},"sourceType":"module"}