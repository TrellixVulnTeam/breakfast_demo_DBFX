{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.marshalPromiseToCallbacks = exports.Sink = exports.Deferred = exports.PromiseResultEventSource = exports.PromiseResult = exports.PromiseState = void 0;\nvar PromiseState;\n\n(function (PromiseState) {\n  PromiseState[PromiseState[\"None\"] = 0] = \"None\";\n  PromiseState[PromiseState[\"Resolved\"] = 1] = \"Resolved\";\n  PromiseState[PromiseState[\"Rejected\"] = 2] = \"Rejected\";\n})(PromiseState = exports.PromiseState || (exports.PromiseState = {}));\n\nvar PromiseResult = function () {\n  function PromiseResult(promiseResultEventSource) {\n    var _this = this;\n\n    this.throwIfError = function () {\n      if (_this.isError) {\n        throw _this.error;\n      }\n    };\n\n    promiseResultEventSource.on(function (result) {\n      if (!_this.privIsCompleted) {\n        _this.privIsCompleted = true;\n        _this.privIsError = false;\n        _this.privResult = result;\n      }\n    }, function (error) {\n      if (!_this.privIsCompleted) {\n        _this.privIsCompleted = true;\n        _this.privIsError = true;\n        _this.privError = error;\n      }\n    });\n  }\n\n  Object.defineProperty(PromiseResult.prototype, \"isCompleted\", {\n    get: function () {\n      return this.privIsCompleted;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(PromiseResult.prototype, \"isError\", {\n    get: function () {\n      return this.privIsError;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(PromiseResult.prototype, \"error\", {\n    get: function () {\n      return this.privError;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(PromiseResult.prototype, \"result\", {\n    get: function () {\n      return this.privResult;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return PromiseResult;\n}();\n\nexports.PromiseResult = PromiseResult;\n\nvar PromiseResultEventSource = function () {\n  function PromiseResultEventSource() {\n    var _this = this;\n\n    this.setResult = function (result) {\n      _this.privOnSetResult(result);\n    };\n\n    this.setError = function (error) {\n      _this.privOnSetError(error);\n    };\n\n    this.on = function (onSetResult, onSetError) {\n      _this.privOnSetResult = onSetResult;\n      _this.privOnSetError = onSetError;\n    };\n  }\n\n  return PromiseResultEventSource;\n}();\n\nexports.PromiseResultEventSource = PromiseResultEventSource;\n\nvar Deferred = function () {\n  function Deferred() {\n    var _this = this;\n\n    this.resolve = function (result) {\n      _this.privResolve(result);\n\n      return _this;\n    };\n\n    this.reject = function (error) {\n      _this.privReject(error);\n\n      return _this;\n    };\n\n    this.privPromise = new Promise(function (resolve, reject) {\n      _this.privResolve = resolve;\n      _this.privReject = reject;\n    });\n  }\n\n  Object.defineProperty(Deferred.prototype, \"promise\", {\n    get: function () {\n      return this.privPromise;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Deferred;\n}();\n\nexports.Deferred = Deferred;\n\nvar Sink = function () {\n  function Sink() {\n    var _this = this;\n\n    this.privState = PromiseState.None;\n    this.privPromiseResult = null;\n    this.privPromiseResultEvents = null;\n    this.privSuccessHandlers = [];\n    this.privErrorHandlers = [];\n\n    this.resolve = function (result) {\n      if (_this.privState !== PromiseState.None) {\n        throw new Error(\"'Cannot resolve a completed promise'\");\n      }\n\n      _this.privState = PromiseState.Resolved;\n\n      _this.privPromiseResultEvents.setResult(result);\n\n      for (var i = 0; i < _this.privSuccessHandlers.length; i++) {\n        _this.executeSuccessCallback(result, _this.privSuccessHandlers[i], _this.privErrorHandlers[i]);\n      }\n\n      _this.detachHandlers();\n    };\n\n    this.reject = function (error) {\n      if (_this.privState !== PromiseState.None) {\n        throw new Error(\"'Cannot reject a completed promise'\");\n      }\n\n      _this.privState = PromiseState.Rejected;\n\n      _this.privPromiseResultEvents.setError(error);\n\n      for (var _i = 0, _a = _this.privErrorHandlers; _i < _a.length; _i++) {\n        var errorHandler = _a[_i];\n\n        _this.executeErrorCallback(error, errorHandler);\n      }\n\n      _this.detachHandlers();\n    };\n\n    this.on = function (successCallback, errorCallback) {\n      if (successCallback == null) {\n        successCallback = function (r) {\n          return;\n        };\n      }\n\n      if (_this.privState === PromiseState.None) {\n        _this.privSuccessHandlers.push(successCallback);\n\n        _this.privErrorHandlers.push(errorCallback);\n      } else {\n        if (_this.privState === PromiseState.Resolved) {\n          _this.executeSuccessCallback(_this.privPromiseResult.result, successCallback, errorCallback);\n        } else if (_this.privState === PromiseState.Rejected) {\n          _this.executeErrorCallback(_this.privPromiseResult.error, errorCallback);\n        }\n\n        _this.detachHandlers();\n      }\n    };\n\n    this.executeSuccessCallback = function (result, successCallback, errorCallback) {\n      try {\n        successCallback(result);\n      } catch (e) {\n        _this.executeErrorCallback(\"'Unhandled callback error: \" + e + \"'\", errorCallback);\n      }\n    };\n\n    this.executeErrorCallback = function (error, errorCallback) {\n      if (errorCallback) {\n        try {\n          errorCallback(error);\n        } catch (e) {\n          throw new Error(\"'Unhandled callback error: \" + e + \". InnerError: \" + error + \"'\");\n        }\n      } else {\n        throw new Error(\"'Unhandled error: \" + error + \"'\");\n      }\n    };\n\n    this.detachHandlers = function () {\n      _this.privErrorHandlers = [];\n      _this.privSuccessHandlers = [];\n    };\n\n    this.privPromiseResultEvents = new PromiseResultEventSource();\n    this.privPromiseResult = new PromiseResult(this.privPromiseResultEvents);\n  }\n\n  Object.defineProperty(Sink.prototype, \"state\", {\n    get: function () {\n      return this.privState;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Sink.prototype, \"result\", {\n    get: function () {\n      return this.privPromiseResult;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Sink;\n}();\n\nexports.Sink = Sink;\n\nfunction marshalPromiseToCallbacks(promise, cb, err) {\n  promise.then(function (val) {\n    try {\n      if (!!cb) {\n        cb(val);\n      }\n    } catch (error) {\n      if (!!err) {\n        try {\n          if (error instanceof Error) {\n            var typedError = error;\n            err(typedError.name + \": \" + typedError.message);\n          } else {\n            err(error);\n          }\n          /* tslint:disable:no-empty */\n\n        } catch (error) {}\n      }\n    }\n  }, function (error) {\n    if (!!err) {\n      try {\n        if (error instanceof Error) {\n          var typedError = error;\n          err(typedError.name + \": \" + typedError.message);\n        } else {\n          err(error);\n        }\n        /* tslint:disable:no-empty */\n\n      } catch (error) {}\n    }\n  });\n}\n\nexports.marshalPromiseToCallbacks = marshalPromiseToCallbacks;","map":{"version":3,"sources":["src/common/Promise.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { ArgumentNullError } from \"./Error\";\r\n\r\nexport enum PromiseState {\r\n    None,\r\n    Resolved,\r\n    Rejected,\r\n}\r\n\r\nexport interface IDeferred<T> {\r\n    readonly promise: Promise<T>;\r\n\r\n    resolve(result: T): IDeferred<T>;\r\n\r\n    reject(error: string): IDeferred<T>;\r\n}\r\n\r\nexport class PromiseResult<T> {\r\n    protected privIsCompleted: boolean;\r\n    protected privIsError: boolean;\r\n    protected privError: string;\r\n    protected privResult: T;\r\n\r\n    public constructor(promiseResultEventSource: PromiseResultEventSource<T>) {\r\n        promiseResultEventSource.on((result: T) => {\r\n            if (!this.privIsCompleted) {\r\n                this.privIsCompleted = true;\r\n                this.privIsError = false;\r\n                this.privResult = result;\r\n            }\r\n        }, (error: string) => {\r\n            if (!this.privIsCompleted) {\r\n                this.privIsCompleted = true;\r\n                this.privIsError = true;\r\n                this.privError = error;\r\n            }\r\n        });\r\n    }\r\n\r\n    public get isCompleted(): boolean {\r\n        return this.privIsCompleted;\r\n    }\r\n\r\n    public get isError(): boolean {\r\n        return this.privIsError;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n\r\n    public get result(): T {\r\n        return this.privResult;\r\n    }\r\n\r\n    public throwIfError = (): void => {\r\n        if (this.isError) {\r\n            throw this.error;\r\n        }\r\n    }\r\n}\r\n\r\nexport class PromiseResultEventSource<T>  {\r\n\r\n    private privOnSetResult: (result: T) => void;\r\n    private privOnSetError: (error: string) => void;\r\n\r\n    public setResult = (result: T): void => {\r\n        this.privOnSetResult(result);\r\n    }\r\n\r\n    public setError = (error: string): void => {\r\n        this.privOnSetError(error);\r\n    }\r\n\r\n    public on = (onSetResult: (result: T) => void, onSetError: (error: string) => void): void => {\r\n        this.privOnSetResult = onSetResult;\r\n        this.privOnSetError = onSetError;\r\n    }\r\n}\r\n\r\nexport class Deferred<T> implements IDeferred<T> {\r\n    private privPromise: Promise<T>;\r\n    private privResolve: (value?: T | PromiseLike<T>) => void;\r\n    private privReject: (reason?: any) => void;\r\n\r\n    public constructor() {\r\n        this.privPromise = new Promise<T>((resolve: (value: T) => void, reject: (reason: any) => void) => {\r\n            this.privResolve = resolve;\r\n            this.privReject = reject;\r\n        });\r\n    }\r\n\r\n    public get promise(): Promise<T> {\r\n        return this.privPromise;\r\n    }\r\n\r\n    public resolve = (result: T | Promise<T>): Deferred<T> => {\r\n        this.privResolve(result);\r\n        return this;\r\n    }\r\n\r\n    public reject = (error: string): Deferred<T> => {\r\n        this.privReject(error);\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class Sink<T> {\r\n    private privState: PromiseState = PromiseState.None;\r\n    private privPromiseResult: PromiseResult<T> = null;\r\n    private privPromiseResultEvents: PromiseResultEventSource<T> = null;\r\n\r\n    private privSuccessHandlers: ((result: T) => void)[] = [];\r\n    private privErrorHandlers: ((e: string) => void)[] = [];\r\n\r\n    public constructor() {\r\n        this.privPromiseResultEvents = new PromiseResultEventSource();\r\n        this.privPromiseResult = new PromiseResult(this.privPromiseResultEvents);\r\n    }\r\n\r\n    public get state(): PromiseState {\r\n        return this.privState;\r\n    }\r\n\r\n    public get result(): PromiseResult<T> {\r\n        return this.privPromiseResult;\r\n    }\r\n\r\n    public resolve = (result: T): void => {\r\n        if (this.privState !== PromiseState.None) {\r\n            throw new Error(\"'Cannot resolve a completed promise'\");\r\n        }\r\n\r\n        this.privState = PromiseState.Resolved;\r\n        this.privPromiseResultEvents.setResult(result);\r\n\r\n        for (let i = 0; i < this.privSuccessHandlers.length; i++) {\r\n            this.executeSuccessCallback(result, this.privSuccessHandlers[i], this.privErrorHandlers[i]);\r\n        }\r\n\r\n        this.detachHandlers();\r\n    }\r\n\r\n    public reject = (error: string): void => {\r\n        if (this.privState !== PromiseState.None) {\r\n            throw new Error(\"'Cannot reject a completed promise'\");\r\n        }\r\n\r\n        this.privState = PromiseState.Rejected;\r\n        this.privPromiseResultEvents.setError(error);\r\n\r\n        for (const errorHandler of this.privErrorHandlers) {\r\n            this.executeErrorCallback(error, errorHandler);\r\n        }\r\n\r\n        this.detachHandlers();\r\n    }\r\n\r\n    public on = (\r\n        successCallback: (result: T) => void,\r\n        errorCallback: (error: string) => void): void => {\r\n\r\n        if (successCallback == null) {\r\n            successCallback = (r: T) => { return; };\r\n        }\r\n\r\n        if (this.privState === PromiseState.None) {\r\n            this.privSuccessHandlers.push(successCallback);\r\n            this.privErrorHandlers.push(errorCallback);\r\n        } else {\r\n            if (this.privState === PromiseState.Resolved) {\r\n                this.executeSuccessCallback(this.privPromiseResult.result, successCallback, errorCallback);\r\n            } else if (this.privState === PromiseState.Rejected) {\r\n                this.executeErrorCallback(this.privPromiseResult.error, errorCallback);\r\n            }\r\n\r\n            this.detachHandlers();\r\n        }\r\n    }\r\n\r\n    private executeSuccessCallback = (result: T, successCallback: (result: T) => void, errorCallback: (error: string) => void): void => {\r\n        try {\r\n            successCallback(result);\r\n        } catch (e) {\r\n            this.executeErrorCallback(`'Unhandled callback error: ${e}'`, errorCallback);\r\n        }\r\n    }\r\n\r\n    private executeErrorCallback = (error: string, errorCallback: (error: string) => void): void => {\r\n        if (errorCallback) {\r\n            try {\r\n                errorCallback(error);\r\n            } catch (e) {\r\n                throw new Error(`'Unhandled callback error: ${e}. InnerError: ${error}'`);\r\n            }\r\n        } else {\r\n            throw new Error(`'Unhandled error: ${error}'`);\r\n        }\r\n    }\r\n\r\n    private detachHandlers = (): void => {\r\n        this.privErrorHandlers = [];\r\n        this.privSuccessHandlers = [];\r\n    }\r\n}\r\n\r\nexport function marshalPromiseToCallbacks<T>(\r\n    promise: Promise<T>,\r\n    cb?: (value: T) => void,\r\n    err?: (error: string) => void): void {\r\n    promise.then((val: T): void => {\r\n        try {\r\n            if (!!cb) {\r\n                cb(val);\r\n            }\r\n        } catch (error) {\r\n            if (!!err) {\r\n                try {\r\n                    if (error instanceof Error) {\r\n                        const typedError: Error = error as Error;\r\n                        err(typedError.name + \": \" + typedError.message);\r\n                    } else {\r\n                        err(error);\r\n                    }\r\n                    /* tslint:disable:no-empty */\r\n                } catch (error) { }\r\n            }\r\n        }\r\n    }, (error: any): void => {\r\n        if (!!err) {\r\n            try {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error as Error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n                } else {\r\n                    err(error);\r\n                }\r\n                /* tslint:disable:no-empty */\r\n            } catch (error) { }\r\n        }\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"script"}