{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PronunciationAssessmentConfig = void 0;\n\nvar Contracts_1 = require(\"./Contracts\");\n\nvar Exports_1 = require(\"./Exports\");\n/**\n * Pronunciation assessment configuration.\n * @class PronunciationAssessmentConfig\n * Added in version 1.15.0.\n */\n\n\nvar PronunciationAssessmentConfig = function () {\n  /**\n   * PronunciationAssessmentConfig constructor.\n   * @constructor\n   * @param {string} referenceText\n   * @param gradingSystem\n   * @param granularity\n   * @param enableMiscue\n   */\n  function PronunciationAssessmentConfig(referenceText, gradingSystem, granularity, enableMiscue) {\n    if (gradingSystem === void 0) {\n      gradingSystem = Exports_1.PronunciationAssessmentGradingSystem.FivePoint;\n    }\n\n    if (granularity === void 0) {\n      granularity = Exports_1.PronunciationAssessmentGranularity.Phoneme;\n    }\n\n    if (enableMiscue === void 0) {\n      enableMiscue = false;\n    }\n\n    Contracts_1.Contracts.throwIfNullOrUndefined(referenceText, \"referenceText\");\n    this.privProperties = new Exports_1.PropertyCollection();\n    this.privProperties.setProperty(Exports_1.PropertyId.PronunciationAssessment_ReferenceText, referenceText);\n    this.privProperties.setProperty(Exports_1.PropertyId.PronunciationAssessment_GradingSystem, Exports_1.PronunciationAssessmentGradingSystem[gradingSystem]);\n    this.privProperties.setProperty(Exports_1.PropertyId.PronunciationAssessment_Granularity, Exports_1.PronunciationAssessmentGranularity[granularity]);\n    this.privProperties.setProperty(Exports_1.PropertyId.PronunciationAssessment_EnableMiscue, String(enableMiscue));\n  }\n  /**\n   * @member PronunciationAssessmentConfig.fromJSON\n   * @function\n   * @public\n   * @param {string} json The json string containing the pronunciation assessment parameters.\n   * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\n   * @summary Creates an instance of the PronunciationAssessmentConfig from json.\n   */\n\n\n  PronunciationAssessmentConfig.fromJSON = function (json) {\n    Contracts_1.Contracts.throwIfNullOrUndefined(json, \"json\");\n    var config = new PronunciationAssessmentConfig(\"\");\n    config.privProperties = new Exports_1.PropertyCollection();\n    config.properties.setProperty(Exports_1.PropertyId.PronunciationAssessment_Json, json);\n    return config;\n  };\n\n  PronunciationAssessmentConfig.prototype.toJSON = function () {\n    this.updateJson();\n    return this.privProperties.getProperty(Exports_1.PropertyId.PronunciationAssessment_Params);\n  };\n\n  PronunciationAssessmentConfig.prototype.applyTo = function (recognizer) {\n    this.updateJson();\n    var recoBase = recognizer.internalData;\n    recoBase.speechContext.setPronunciationAssessmentParams(this.properties.getProperty(Exports_1.PropertyId.PronunciationAssessment_Params));\n  };\n\n  Object.defineProperty(PronunciationAssessmentConfig.prototype, \"referenceText\", {\n    /**\n     * Gets the reference text.\n     * @member PronunciationAssessmentConfig.prototype.referenceText\n     * @function\n     * @public\n     * @returns {string} Reference text.\n     */\n    get: function () {\n      return this.properties.getProperty(Exports_1.PropertyId.PronunciationAssessment_ReferenceText);\n    },\n\n    /**\n     * Gets/Sets the reference text.\n     * @member PronunciationAssessmentConfig.prototype.referenceText\n     * @function\n     * @public\n     * @param {string} referenceText - Reference text.\n     */\n    set: function (referenceText) {\n      Contracts_1.Contracts.throwIfNullOrWhitespace(referenceText, \"referenceText\");\n      this.properties.setProperty(Exports_1.PropertyId.PronunciationAssessment_ReferenceText, referenceText);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(PronunciationAssessmentConfig.prototype, \"properties\", {\n    /**\n     * @member PronunciationAssessmentConfig.prototype.properties\n     * @function\n     * @public\n     * @return {PropertyCollection} Properties of the config.\n     * @summary Gets a pronunciation assessment config properties\n     */\n    get: function () {\n      return this.privProperties;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  PronunciationAssessmentConfig.prototype.updateJson = function () {\n    var jsonString = this.privProperties.getProperty(Exports_1.PropertyId.PronunciationAssessment_Json, \"{}\");\n    var paramsJson = JSON.parse(jsonString);\n    var referenceText = this.privProperties.getProperty(Exports_1.PropertyId.PronunciationAssessment_ReferenceText);\n\n    if (referenceText) {\n      paramsJson.referenceText = referenceText;\n    }\n\n    var gradingSystem = this.privProperties.getProperty(Exports_1.PropertyId.PronunciationAssessment_GradingSystem);\n\n    if (gradingSystem) {\n      paramsJson.gradingSystem = gradingSystem;\n    }\n\n    var granularity = this.privProperties.getProperty(Exports_1.PropertyId.PronunciationAssessment_Granularity);\n\n    if (granularity) {\n      paramsJson.granularity = granularity;\n    } // always set dimension to Comprehensive\n\n\n    paramsJson.dimension = \"Comprehensive\";\n    var enableMiscueString = this.privProperties.getProperty(Exports_1.PropertyId.PronunciationAssessment_EnableMiscue);\n\n    if (enableMiscueString === \"true\") {\n      paramsJson.enableMiscue = true;\n    } else if (enableMiscueString === \"false\") {\n      paramsJson.enableMiscue = false;\n    }\n\n    this.privProperties.setProperty(Exports_1.PropertyId.PronunciationAssessment_Params, JSON.stringify(paramsJson));\n  };\n\n  return PronunciationAssessmentConfig;\n}();\n\nexports.PronunciationAssessmentConfig = PronunciationAssessmentConfig;","map":{"version":3,"sources":["src/sdk/PronunciationAssessmentConfig.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ServiceRecognizerBase } from \"../common.speech/ServiceRecognizerBase\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    PronunciationAssessmentGradingSystem,\r\n    PronunciationAssessmentGranularity,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Pronunciation assessment configuration.\r\n * @class PronunciationAssessmentConfig\r\n * Added in version 1.15.0.\r\n */\r\nexport class PronunciationAssessmentConfig {\r\n    private privProperties: PropertyCollection;\r\n\r\n    /**\r\n     * PronunciationAssessmentConfig constructor.\r\n     * @constructor\r\n     * @param {string} referenceText\r\n     * @param gradingSystem\r\n     * @param granularity\r\n     * @param enableMiscue\r\n     */\r\n    public constructor(referenceText: string,\r\n                       gradingSystem: PronunciationAssessmentGradingSystem = PronunciationAssessmentGradingSystem.FivePoint,\r\n                       granularity: PronunciationAssessmentGranularity = PronunciationAssessmentGranularity.Phoneme,\r\n                       enableMiscue: boolean = false) {\r\n        Contracts.throwIfNullOrUndefined(referenceText, \"referenceText\");\r\n        this.privProperties = new PropertyCollection();\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_ReferenceText, referenceText);\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_GradingSystem, PronunciationAssessmentGradingSystem[gradingSystem]);\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_Granularity, PronunciationAssessmentGranularity[granularity]);\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_EnableMiscue, String(enableMiscue));\r\n    }\r\n\r\n    /**\r\n     * @member PronunciationAssessmentConfig.fromJSON\r\n     * @function\r\n     * @public\r\n     * @param {string} json The json string containing the pronunciation assessment parameters.\r\n     * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\r\n     * @summary Creates an instance of the PronunciationAssessmentConfig from json.\r\n     */\r\n    public static fromJSON(json: string): PronunciationAssessmentConfig {\r\n        Contracts.throwIfNullOrUndefined(json, \"json\");\r\n        const config = new PronunciationAssessmentConfig(\"\");\r\n        config.privProperties = new PropertyCollection();\r\n        config.properties.setProperty(PropertyId.PronunciationAssessment_Json, json);\r\n        return config;\r\n    }\r\n\r\n    public toJSON(): string {\r\n        this.updateJson();\r\n        return this.privProperties.getProperty(PropertyId.PronunciationAssessment_Params);\r\n    }\r\n\r\n    public applyTo(recognizer: Recognizer): void {\r\n        this.updateJson();\r\n        const recoBase = recognizer.internalData as ServiceRecognizerBase;\r\n        recoBase.speechContext.setPronunciationAssessmentParams(this.properties.getProperty(PropertyId.PronunciationAssessment_Params));\r\n    }\r\n\r\n    /**\r\n     * Gets the reference text.\r\n     * @member PronunciationAssessmentConfig.prototype.referenceText\r\n     * @function\r\n     * @public\r\n     * @returns {string} Reference text.\r\n     */\r\n    public get referenceText(): string {\r\n        return this.properties.getProperty(PropertyId.PronunciationAssessment_ReferenceText);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the reference text.\r\n     * @member PronunciationAssessmentConfig.prototype.referenceText\r\n     * @function\r\n     * @public\r\n     * @param {string} referenceText - Reference text.\r\n     */\r\n    public set referenceText(referenceText: string) {\r\n        Contracts.throwIfNullOrWhitespace(referenceText, \"referenceText\");\r\n        this.properties.setProperty(PropertyId.PronunciationAssessment_ReferenceText, referenceText);\r\n    }\r\n\r\n    /**\r\n     * @member PronunciationAssessmentConfig.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @return {PropertyCollection} Properties of the config.\r\n     * @summary Gets a pronunciation assessment config properties\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    private updateJson(): void {\r\n        const jsonString = this.privProperties.getProperty(PropertyId.PronunciationAssessment_Json, \"{}\");\r\n        const paramsJson = JSON.parse(jsonString);\r\n\r\n        const referenceText = this.privProperties.getProperty(PropertyId.PronunciationAssessment_ReferenceText);\r\n        if (referenceText) {\r\n            paramsJson.referenceText = referenceText;\r\n        }\r\n\r\n        const gradingSystem = this.privProperties.getProperty(PropertyId.PronunciationAssessment_GradingSystem);\r\n        if (gradingSystem) {\r\n            paramsJson.gradingSystem = gradingSystem;\r\n        }\r\n\r\n        const granularity = this.privProperties.getProperty(PropertyId.PronunciationAssessment_Granularity);\r\n        if (granularity) {\r\n            paramsJson.granularity = granularity;\r\n        }\r\n\r\n        // always set dimension to Comprehensive\r\n        paramsJson.dimension = \"Comprehensive\";\r\n\r\n        const enableMiscueString = this.privProperties.getProperty(PropertyId.PronunciationAssessment_EnableMiscue);\r\n        if (enableMiscueString === \"true\") {\r\n            paramsJson.enableMiscue = true;\r\n        } else if (enableMiscueString === \"false\") {\r\n            paramsJson.enableMiscue = false;\r\n        }\r\n\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_Params, JSON.stringify(paramsJson));\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"script"}